% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TFsEnrichInRegions.R
\docType{methods}
\name{TFsEnrichInRegions}
\alias{TFsEnrichInRegions}
\alias{enrichTFsEnrichInRegions,Step-method}
\alias{enrichTFsEnrichInRegions}
\alias{tfsEnrichInRegions}
\title{Test each TF is enriched in regions or not}
\usage{
enrichTFsEnrichInRegions(prevStep, inputRegionBed = NULL,
  inputForegroundGeneBed = NULL, inputBackgroundGeneBed = NULL,
  inputRegionMotifBed = NULL, outputTFsEnrichTxt = NULL,
  inputMotifWeights = NULL, inputTFgeneRelMtx = NULL,
  inputMotifTFTable = NULL, ...)

\S4method{enrichTFsEnrichInRegions}{Step}(prevStep,
  inputRegionBed = NULL, inputForegroundGeneBed = NULL,
  inputBackgroundGeneBed = NULL, inputRegionMotifBed = NULL,
  outputTFsEnrichTxt = NULL, inputMotifWeights = NULL,
  inputTFgeneRelMtx = NULL, inputMotifTFTable = NULL, ...)

tfsEnrichInRegions(inputRegionBed, inputForegroundGeneBed,
  inputBackgroundGeneBed, inputRegionMotifBed, outputTFsEnrichTxt = NULL,
  inputMotifWeights = NULL, inputTFgeneRelMtx = NULL,
  inputMotifTFTable = NULL, ...)
}
\arguments{
\item{prevStep}{\code{\link{Step-class}} object scalar.
This parameter is available when the upstream step function
(printMap() to see the previous functions)
have been sucessfully called.
Accepted value can be the object return by any step function or be feed by
\code{\%>\%} from last step function.}

\item{inputRegionBed}{\code{Character} scalar.
Directory of Regions BED file  including foreground and background}

\item{inputForegroundGeneBed}{\code{Character} scalar.
Directory of BED file  including foreground regions connected
to related genes. The forth column is region ID}

\item{inputBackgroundGeneBed}{\code{Character} scalar.
Directory BED file including foreground regions connected
to related genes. The forth column is region ID}

\item{inputRegionMotifBed}{\code{Character} scalar.
Directory BED file  including foreground regions matched motifs.
The forth column is region ID.
The fifth column is motif calling score. The sixth column is motif name.}

\item{outputTFsEnrichTxt}{\code{Character} scalar.
Directory of Text result file  with five columns.
The first columns is transcription factor ,The second column is xxxx}

\item{inputMotifWeights}{\code{Character} scalar.
Directory of Text file contain motif weight. The first column is motif name.
The second column is the weight.
Default: NULL (if \code{setGenome} is called.)}

\item{inputTFgeneRelMtx}{\code{Character} scalar.
Directory of Text file contain a Transcription Factior(TF) and
Gene relation weight matrix.
Default: NULL (if \code{setGenome} is called.)}

\item{inputMotifTFTable}{\code{Character} scalar.
Directory of Text file contain  Transcription Factior(TF)
(the first column) and motif name(the second column).
Default: NULL (if \code{setGenome} is called.)}

\item{...}{Additional arguments, currently unused.}
}
\value{
An invisible \code{\link{EnrichStep-class}} object
(\code{\link{Step-class}} based) scalar for downstream analysis.
}
\description{
Test each TF is enriched in regions or not
}
\details{
Connect foreground and background regions to targetGene.
If you only use this function without previous steps and
you do not familiar with the data format of the input,
you can run the example to see the example input from previous steps.
}
\examples{

library(magrittr)
setGenome("testgenome") #Use "hg19","hg38",etc. for your application
foregroundBedPath <- system.file(package = "enrichTF", "extdata","testregion.bed")
gen <- genBackground(inputForegroundBed = foregroundBedPath)
conTG <- enrichRegionConnectTargetGene(gen)
findMotif <- enrichFindMotifsInRegions(gen,motifRc="integrate")
result <- enrichTFsEnrichInRegions(gen)

genBackground(inputForegroundBed = foregroundBedPath) \%>\%
    enrichRegionConnectTargetGene \%>\%
    enrichFindMotifsInRegions(motifRc="integrate") \%>\%
    enrichTFsEnrichInRegions

}
\seealso{
\code{\link{genBackground}}
\code{\link{findMotifsInRegions}}
\code{\link{tfsEnrichInRegions}}
}
\author{
Zheng Wei
}
